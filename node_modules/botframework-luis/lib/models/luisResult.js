/*
 * Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a LuisResult.
 */
class LuisResult {
  /**
   * Create a LuisResult.
   * @member {string} query The query sent to LUIS.
   * @member {object} [topScoringIntent]
   * @member {string} [topScoringIntent.intent] The LUIS intent detected by
   * LUIS service in response to a query.
   * @member {number} [topScoringIntent.score] The score for the detected
   * intent.
   * @member {array} [topScoringIntent.actions] The action associated with this
   * Luis intent.
   * @member {array} [intents] The intents found in the query text.
   * @member {array} entities The entities found in the query text.
   * @member {array} [compositeEntities] The composite entities found in the
   * utterance.
   * @member {object} [dialog]
   * @member {string} [dialog.prompt] Prompt that should be asked.
   * @member {string} [dialog.parameterName] Name of the parameter.
   * @member {string} [dialog.parameterType] Type of the parameter.
   * @member {string} [dialog.contextId] The context id for dialog.
   * @member {string} [dialog.status] The dialog status. Possible values
   * include: 'Question', 'Finished'
   * @member {string} [alteredQuery] The altered query used by LUIS to extract
   * intent and entities. For example, when Bing spell check is enabled for a
   * model, this field will contain the spell checked utterance.
   */
  constructor() {
  }

  /**
   * Defines the metadata of LuisResult
   *
   * @returns {object} metadata of LuisResult
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'LuisResult',
      type: {
        name: 'Composite',
        className: 'LuisResult',
        modelProperties: {
          query: {
            required: true,
            serializedName: 'query',
            type: {
              name: 'String'
            }
          },
          topScoringIntent: {
            required: false,
            serializedName: 'topScoringIntent',
            type: {
              name: 'Composite',
              className: 'Intent'
            }
          },
          intents: {
            required: false,
            serializedName: 'intents',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'IntentElementType',
                  type: {
                    name: 'Composite',
                    className: 'Intent'
                  }
              }
            }
          },
          entities: {
            required: true,
            serializedName: 'entities',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'EntityElementType',
                  type: {
                    name: 'Composite',
                    className: 'Entity'
                  }
              }
            }
          },
          compositeEntities: {
            required: false,
            serializedName: 'compositeEntities',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'CompositeEntityElementType',
                  type: {
                    name: 'Composite',
                    className: 'CompositeEntity'
                  }
              }
            }
          },
          dialog: {
            required: false,
            serializedName: 'dialog',
            type: {
              name: 'Composite',
              className: 'DialogResponse'
            }
          },
          alteredQuery: {
            required: false,
            serializedName: 'alteredQuery',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = LuisResult;
